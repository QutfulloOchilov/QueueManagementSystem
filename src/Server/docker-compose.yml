version: '3.4'

services:
  queueManagment:
    image: queuemanagment
    build:
      context: .
      dockerfile: src/API/Dockerfile
    environment:
      - "UseInMemoryDatabase=false"
      - "ASPNETCORE_ENVIRONMENT=Development"      
      - "ConnectionStrings__PostgreSql=User ID=queueUser;Password=queuePass;Host=dbqueue;Port=5432;Database=queueManagment;Pooling=true;"
      - "IdentityServer__Key__Type=Development"
      - "ASPNETCORE_URLS=http://+:4300"
    ports:
      - "1312:4300"
    depends_on:
      - dbqueue
    restart: on-failure
    
  dbqueue:
    image: "postgres"
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: queuePass
      POSTGRES_USER: queueUser

  adminerqueue:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - dbqueue

  elasticsearch:
    container_name: els
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/datafile
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    networks:
      - elastcinetwork

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.1
    ports:
      - 5601:5601
    depends_on:
      - els
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    networks:
      - elastcinetwork

networks:
  elastcinetwork:
    driver: bridge

volumes:
  elasticsearch-data: